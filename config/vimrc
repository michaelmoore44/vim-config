
set nocompatible


runtime submodules/vim-pathogen/autoload/pathogen.vim
if has('vim_starting')
    let config=pathogen#split(&runtimepath)[0]
    execute pathogen#infect('submodules/{}')
endif


let &undodir=expand("<sfile>:p:h:h")."/undo"


set laststatus=2   " Always show the statusline
set encoding=utf-8 " Necessary to show Unicode glyphs


" change the mapleader from \ to ,
let mapleader = "\<space>"

set tabstop=4     " a tab is four spaces
set nowrap        " don't wrap lines
set autoindent    " always set autoindenting on
set copyindent    " copy the previous indentation on autoindenting
set number        " always show line numbers
set shiftwidth=4  " number of spaces to use for autoindenting
set showmatch     " set show matching parenthesis

set history=1000         " remember more commands and search history
set undolevels=1000      " use many muchos levels of undo
set visualbell           " don't beep
set noerrorbells         " don't beep
set showcmd              " display incomplete commands
set incsearch            " show search matches as you type
set ignorecase           " ignore case when searching
set smartcase            " only consider case if capital letters are used
"set hlsearch			 " search matches are highlighted

nnoremap <leader>o :FufCoverageFile<CR>
nnoremap <leader>e :FufBuffer<CR>
nnoremap <leader>t :FufTag<CR>
nnoremap <leader>h :echo "leader works"<CR>

nnoremap <leader>ev :e $VIM\vimfiles\config\VIMRC<CR>
nnoremap <leader>sv :so $MYVIMRC<CR>

"Window group
nnoremap <leader>wv <C-w>v
nnoremap <leader>wh <C-w>h
nnoremap <leader>wj <C-w>j
nnoremap <leader>wk <C-w>k
nnoremap <leader>wl <C-w>l

" Open vertical split and switch to it
"nnoremap <leader>w <C-w>v<C-w>l

nnoremap <silent> <leader><CR> :nohlsearch<CR>

map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

map <leader>f :execute "vimgrep /" . expand("<cword>") . "/j **" <Bar> cw<CR>


" Allow us to switch away from an unsaved buffer
set hidden

" Highlight the entire line where the cursor is located
set cursorline

" Set up the status bar with lots of good information
set showmode
set showcmd
set ruler
syntax on

set colorcolumn=80

" Persistent undo even if vim is closed
set undofile

" Highlight spacing errors
nnoremap <leader>f<space> /\v(\s+$)\|(<space>\ze<tab>)<CR>

" Highlight tabs
nnoremap <leader>f<Tab> /<Tab><CR>


" Let us use ; instead of : for command mode
"nnoremap ; :

nnoremap <Tab> <C-o>
nnoremap L $
nnoremap H ^
vnoremap L $
vnoremap H ^


inoremap jk <Esc>`^
inoremap kj <Esc>`^
vnoremap ;; <Esc>gV

" Some filesystems that are mounted in /tmp (particularly on OS X), cause
" problems with backup files
autocmd BufRead /tmp/*
    \ setlocal nobackup |
    \ setlocal nowritebackup

" only for diff mode/vimdiff
if &diff                             
  " filler is default and inserts empty lines for sync
  set diffopt=filler,context:1000000
endif

"Cscope stuff
if has('cscope')
  set cscopetag cscopeverbose

  if has('quickfix')
    set cscopequickfix=s-,c-,d-,i-,t-,e-
  endif

  cnoreabbrev csa cs add
  cnoreabbrev csf cs find
  cnoreabbrev csk cs kill
  cnoreabbrev csr cs reset
  cnoreabbrev css cs show
  cnoreabbrev csh cs help

  command -nargs=0 Cscope cs add $VIMSRC/src/cscope.out $VIMSRC/src
endif

if has('gui')
  "set guioptions-=T  " no toolbar
  "colorscheme jellybeans
  colorscheme mopkai
  "colorscheme skittles_berry
  "set lines=60 columns=108 linespace=0
  if has('gui_win32')
    "set guifont=Anka/Coder:h10
    set guifont=Hack:h10
  else
    "set guifont=Anka/Coder\ 10
    set guifont=Hack\ 10
  endif
endif

if $TERM == "linux"
    set background=dark
    colors elflord
elseif has("win32") && !has("gui")
    set background=dark
    colors elflord
else
	set t_Co=256
    if $TERM == "screen"
      set t_Co=256
    endif
    set background=dark
    "colors jellybeans
    colors mopkai
  	"colorscheme skittles_berry
endif

source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/mswin.vim
behave mswin

set selection=inclusive


